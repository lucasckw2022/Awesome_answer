<h1><%= @question.title %></h1>
<p><%= @question.body%></p>
<p>View Count: <%= @question.view_count %></p>
<p>Created By: <%= @question.user_full_name %></p>
<p>Tags: <%= @question.tags.map{|t| t.name }.join(", ") %></p>
<%# can? is a helper method that came from the CanCanCan gem to help us enforce
    authorization rules in the views and controllers. We didn't specifically
    put rules for :edit and :destroy but we put a rule for :manage which includes
    both of them. %>
<% if can? :crud, @question %>
<%= link_to "Edit", edit_question_path%>
<%= link_to "Delete", question_path(@question), method: :delete,
                                                data: {confirm: "Are you sure?"} %>
<% end %>
<hr>
<div id="question-like">
  <%= render "/likes/like"%>
</div>
 |
<% user_vote = @question.vote_for(current_user) %>
<% if user_vote && user_vote.is_up?%>
  <%= link_to "Un-do Vote Up", question_vote_path(@question,user_vote),method: :delete%> |
  <%= link_to "Vote down", question_vote_path(@question, user_vote, {vote:{is_up:false}}),method: :patch%>
<% elsif user_vote%>
  <%= link_to "Vote Up", question_vote_path(@question, user_vote, {vote:{is_up:true}}),method: :patch%> |
  <%= link_to "Un-do Vote down", question_vote_path(@question,user_vote),method: :delete%>
<% else%>
  <%= link_to "Vote up", question_votes_path(@question, {vote:{is_up:true}}),method: :post%> |
  <%= link_to "Vote down", question_votes_path(@question, {vote:{is_up:false}}),method: :post%>
<%end%>
(<%= @question.vote_value%>)
<%#= form_for @answer, url: question_answers_path(@question) do |f| %>
<!-- the below would do the same as above-->
<hr>
<h2>Answers</h2>
<div id="answer-form">
  <%= render "/answers/form", answer: @answer %>
</div>
<hr>
<div id="answers">
  <% @question.answers.each do |answer| %>
    <%= render "/answers/answer" ,answer:answer%>
  <%end%>
</div>

<!-- Modal -->
<div class="modal fade" id="edit-answer" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
  <%= render "/answers/modal_form" %>
</div>
